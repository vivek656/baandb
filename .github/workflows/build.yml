name: Build and Test baandb

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v3

    # Install dependencies for Linux
    - name: 🛠️ Install dependencies (Linux)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          build-essential cmake pkg-config \
          libglib2.0-dev uuid-dev \
          libapr1-dev libaprutil1-dev \
          libcjson-dev
          
    # Install dependencies for macOS
    - name: 🍎 Install dependencies (macOS)
      if: matrix.os == 'macos-latest'
      run:   |
        brew update
        brew install cmake pkg-config glib apr apr-util cjson
        echo "PKG_CONFIG_PATH=$(brew --prefix glib)/lib/pkgconfig" >> $GITHUB_ENV
        brew install gtk
        brew upgrade

    # Setup MSYS2 and install dependencies for Windows
    - name: 🪟 Setup MSYS2 & dependencies (Windows)
      if: matrix.os == 'windows-latest'
      uses: msys2/setup-msys2@v2
      with:
        update: true
        install: >-
          base-devel
          mingw-w64-x86_64-toolchain
          mingw-w64-x86_64-cmake
          mingw-w64-x86_64-pkg-config
          mingw-w64-x86_64-glib2
          mingw-w64-x86_64-apr
          mingw-w64-x86_64-apr-util
          mingw-w64-x86_64-cjson

    # Build the project
    - name: 🔧 Configure & Build
      run: |
        mkdir -p build
        cd build
        cmake ..
        cmake --build .

    # Run tests (if applicable)
    - name: 🧪 Run tests
      run: |
        cd build
        ctest .